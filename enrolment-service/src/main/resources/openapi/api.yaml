openapi: 3.0.0
info:
  version: 1.0.0
  title: Enrolment Service API
  description: This service handled client biometrics fingerprint enrolment
paths:
  /enrolments:
    # GET Method
    get:
      summary: "Get all enrolled clients"
      description: Returns all enrolled clients
      tags: [ "Enrolments" ]
      operationId: "get"
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ClientDTOList"
        401:
          description: Not authorized to perform action.
    # POST Method
    post:
      summary: "Enrol new client"
      description: "The endpoint registers a new client if the submitted 
      fingerprints does not have a match from previously submitted fingerprints."
      tags: [ "Enrolments" ]
      operationId: "enroll"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/EnrolmentDTO"
            example:
              firstName: "John"
              middleName: "Middle"
              lastName: "Doe"
              sex: "M"
              dateOfBirth: "1990-01-17"
              clientIdName: "NRC"
              clientIdValue: "123456/66/9"
              rightThumb: "[10, 145, 140, 188, 212, 198, 210, 25, 152, 20, 120, 15, 49,..]"
              rightMiddle: "[10, 145, 140, 188, 212, 198, 210, 25, 152, 20, 120, 15, 49,...]"
              leftThumb: "[10, 145, 140, 188, 212, 198, 210, 25, 152, 20, 120, 15, 49,...]"

      responses:
        "201":
          description: "New client successfully enrolled"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ClientDTO"

        400:
          description: "The payload sent with request is invalid"
        401:
          description: Not authorized to perform action.

  /enrolments/{id}:
    # GET Method
    get:
      summary: "Get client by ID"
      description: Returns a client with matching ID.
      tags: [ "Enrolments" ]
      operationId: "getById"
      parameters:
        - name: id
          in: path
          required: true
          description: Return the client with matching ID
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ClientDTO"
        "400":
          description: Specified subject ID is not a valid uuid
        "404":
          description: Post not found
    # PUT Method
    put:
      description: Update client's auxiliary IDs.
      tags: [ "Enrolments" ]
      operationId: "update"
      parameters:
        - name: id
          in: path
          required: true
          description: The subject id
          schema:
            type: string
      responses:
        "204":
          description: Subject updated successfully.
        "400":
          description: Specified subject ID is not a valid uuid.
    # DELETE Method
    delete:
      description: Delete enrolled subject
      tags: [ "Enrolments" ]
      operationId: "delete"
      parameters:
        - name: id
          in: path
          required: true
          description: The subject id
          schema:
            type: string
      responses:
        "204":
          description: Subject updated successfully
        "400":
          description: Specified subject ID is not a valid uuid

components:
  schemas:
    ClientDTOList:
      type: array
      items:
        $ref: "#/components/schemas/ClientDTO"

    AuxiliaryId:
      type: object
      required:
        - type
        - value
        - sourceSystemId
      properties:
        type:
          type: string
        value:
          type: string
        sourceSystemId:
          type: string
      example:
        type: "NRC"
        value: "123456/66/9"

    ClientDTO:
      type: object
      required:
        - firstName
        - lastName
        - sex
        - dateOfBirth
        - newClient
      properties:
        id:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        sex:
          type: string
        dateOfBirth:
          type: string
        auxiliaryIds:
          type: array
          items:
            $ref: "#/components/schemas/AuxiliaryId"
        newClient:
          type: boolean
      example:
        id: "0b6f8ca3-2262-4520-b3ae-af67ddaba70d"
        firstName: "John"
        middleName: "Middle"
        lastName: "Doe"
        sex: "M"
        dateOfBirth: "1990-01-17"
        auxiliaryIds: [
          {
            type: "NRC",
            value: "123456/66/9"
          }
        ]
        newClient: true

    EnrolmentDTO:
      type: object
      required:
        - firstName
        - lastName
        - sex
        - dateOfBirth
        - clientIdName
        - clientIdValue
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        sex:
          type: string
        dateOfBirth:
          type: string
        clientIdName:
          type: string
        clientIdValue:
          type: string
        rightThumb:
          type: string
          format: binary
        rightIndex:
          type: string
          format: binary
        rightMiddle:
          type: string
          format: binary
        rightRing:
          type: string
          format: binary
        rightPinky:
          type: string
          format: binary
        leftThumb:
          type: string
          format: binary
        leftIndex:
          type: string
          format: binary
        leftMiddle:
          type: string
          format: binary
        leftRing:
          type: string
          format: binary
        leftPinky:
          type: string
          format: binary
      example:
        firstName: "John"
        middleName: "Middle"
        lastName: "Doe"
        sex: "M"
        dateOfBirth: "1990-01-17"
        clientIdName: "NRC"
        clientIdValue: "123456/66/9"
        rightThumb: "[10, 145, 140, 188, 212, 198, 210, 25, 152, 20, 120, 15, 49,..]"
        rightMiddle: "[10, 145, 140, 188, 212, 198, 210, 25, 152, 20, 120, 15, 49,...]"
        leftThumb: "[10, 145, 140, 188, 212, 198, 210, 25, 152, 20, 120, 15, 49,...]"

