openapi: 3.0.0
info:
  version: 1.0.0
  title: Fingerprint Search API
  description: API for searching clients using fingerprint images or templates
paths:
  /search:
    post:
      tags:
        - Search
      summary: Find a client using a given fingerprint image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fingerprint:
                  type: string
                  format: binary
            examples:
              example:
                value:
                  fingerprint: "base64encodedimage"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDTO'
              examples:
                example:
                  value:
                    id: "123e4567-e89b-12d3-a456-426614174000"
                    firstName: "John"
                    lastName: "Doe"
                    sex: "Male"
                    dateOfBirth: "1900-01-01"
                    fingerprintImages:
                      - position: "RIGHT_THUMB"
                        image: "base64encodedimage1"
                        clientId: "123e4567-e89b-12d3-a456-426614174000"
                      - position: "LEFT_THUMB"
                        image: "base64encodedimage2"
                        clientId: "123e4567-e89b-12d3-a456-426614174000"
                    auxiliaryIds:
                      - type: "national registration number"
                        value: "123456/68/1"
                        sourceSystemId: "456e7890-e89b-12d3-a456-426614174111"
                    newClient: false
        '400':
          description: Bad request
      operationId: searchClient

  /search/any:
    post:
      tags:
        - Search
      summary: Find a client using a given collection of fingerprint templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FingerprintImageDTO'
            examples:
              example:
                value:
                  - position: "RIGHT_THUMB"
                    image: "base64encodedimage1"
                    clientId: "123e4567-e89b-12d3-a456-426614174000"
                  - position: "LEFT_THUMB"
                    image: "base64encodedimage2"
                    clientId: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchScore'
              example:
                example1:
                  value:
                    subjectId: "123e4567-e89b-12d3-a456-426614174000"
                    score: 95.5
        '400':
          description: Bad request
      operationId: searchAny

components:
  schemas:
    ClientDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
        dateOfBirth:
          type: string
          format: date
        fingerprintImages:
          type: array
          items:
            $ref: '#/components/schemas/FingerprintImageDTO'
        auxiliaryIds:
          type: array
          items:
            $ref: '#/components/schemas/AuxiliaryIdDTO'
        newClient:
          type: boolean
      required:
        - firstName
        - lastName
        - sex
        - dateOfBirth

    MatchScore:
      type: object
      properties:
        subjectId:
          type: string
          format: uuid
        score:
          type: number
          format: double
      required:
        - subjectId
        - score

    FingerprintImageDTO:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/Position'
        image:
          type: string
          format: binary
        clientId:
          type: string
          format: uuid
      required:
        - position
        - image
      additionalProperties: false

    Sex:
      type: string
      enum:
        - Male
        - Female
        - Other

    Position:
      type: string
      enum:
        - RIGHT_THUMB
        - RIGHT_INDEX
        - RIGHT_MIDDLE
        - RIGHT_RING
        - RIGHT_PINKY
        - LEFT_THUMB
        - LEFT_INDEX
        - LEFT_MIDDLE
        - LEFT_RING
        - LEFT_PINKY

    AuxiliaryIdDTO:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
        sourceSystemId:
          type: string
          format: uuid
      required:
        - type
        - value
        - sourceSystemId
